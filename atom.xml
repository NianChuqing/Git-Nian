<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lao Nian</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-03-27T11:06:51.211Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Dart学习笔记 (三)</title>
    <link href="http://yoursite.com/2020/03/27/Dart%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%B8%89/"/>
    <id>http://yoursite.com/2020/03/27/Dart%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%B8%89/</id>
    <published>2020-03-27T11:05:23.000Z</published>
    <updated>2020-03-27T11:06:51.211Z</updated>
    
    <content type="html"><![CDATA[<p><strong>String和Num的类型转换   ++–自增自减   for循环基础语法   List常用属性和方法</strong></p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;String和Num的类型转换   ++–自增自减   for循环基础语法   List常用属性和方法&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="http://yoursite.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="http://yoursite.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Dart学习笔记 (二)</title>
    <link href="http://yoursite.com/2020/03/24/Dart%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%BA%8C/"/>
    <id>http://yoursite.com/2020/03/24/Dart%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%BA%8C/</id>
    <published>2020-03-24T12:50:23.000Z</published>
    <updated>2020-03-27T11:04:49.003Z</updated>
    
    <content type="html"><![CDATA[<p><strong>数组  字典  算术运算符  关系运算符  逻辑运算符  条件表达式</strong>  <strong>三目运算</strong></p><a id="more"></a><h3 id="List定义数组的两种方式"><a href="#List定义数组的两种方式" class="headerlink" title="List定义数组的两种方式"></a>List定义数组的两种方式</h3><ul><li><p>&lt; &gt;指限制数组内容为指定类型</p></li><li><p>数组内容编号从0开始,如: 例1中111为0,abc为1,333为2</p></li><li><p>例1:</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a=[<span class="number">111</span>,<span class="string">'abc'</span>,<span class="number">333</span>];   <span class="comment">//第一种定义数组的方式</span></span><br><span class="line"><span class="built_in">print</span>(a);   <span class="comment">//输出[111 abc 333]</span></span><br><span class="line"><span class="built_in">print</span>(a.length);   <span class="comment">//指数组的内容长度,有三个内容所以 输出:3</span></span><br><span class="line"><span class="built_in">print</span>(a[<span class="number">0</span>]);   <span class="comment">//指输出数组a中的0号内容  输出: 111</span></span><br></pre></td></tr></table></figure></li><li><p>例2:</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> b=<span class="keyword">new</span> <span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt;();   <span class="comment">//第二种定义数组的方式 &lt; &gt;表示限定内容为String字符串内容</span></span><br><span class="line">b.add(<span class="string">'张三'</span>);   <span class="comment">//第二种方法需要用.add方法或者.addall方法给数组添加内容</span></span><br><span class="line">b.add(<span class="number">123</span>);   <span class="comment">//数组b限制内容为字符串类型 123因为没有带引号所以是数值内容 所以是错误的 X</span></span><br><span class="line">b.add(<span class="string">'李四'</span>);   </span><br><span class="line"><span class="built_in">print</span>(b[<span class="number">1</span>]);   <span class="comment">//输出数组b的1的内容 因为b.add(123);是错误的内容 需要删除掉 所以1为李四 输出:李四</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="Map定义集合的两种方式"><a href="#Map定义集合的两种方式" class="headerlink" title="Map定义集合的两种方式"></a>Map定义集合的两种方式</h3><ul><li><p>例1:</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person=&#123;   </span><br><span class="line">    <span class="string">'name'</span>:<span class="string">'张三'</span>,   <span class="comment">//定义key'name'的value(内容)为张三</span></span><br><span class="line">    <span class="string">'age'</span>:<span class="number">20</span>   <span class="comment">//定义key'age'的value(内容)为20</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">print</span>(person);   <span class="comment">//输出:&#123;name:张三,age:20&#125;</span></span><br><span class="line"><span class="built_in">print</span>(person[<span class="string">'name'</span>]);   <span class="comment">//输出name的value: 张三</span></span><br><span class="line"><span class="built_in">print</span>(person[<span class="string">'age'</span>]);   <span class="comment">//输出age的value: 20</span></span><br><span class="line"><span class="built_in">print</span>(person[<span class="string">'张三'</span>]);   <span class="comment">//不能使用value来输出key 所以是错误的 X</span></span><br></pre></td></tr></table></figure></li><li><p>例2:</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> p=<span class="keyword">new</span> <span class="built_in">Map</span>();</span><br><span class="line">p[<span class="string">'name'</span>]=<span class="string">'李四'</span>;   <span class="comment">//name为key 李四为value  </span></span><br><span class="line">p[<span class="string">'age'</span>]=<span class="number">20</span>;   </span><br><span class="line">p[<span class="string">'work'</span>]=[<span class="string">'送外卖'</span>,<span class="string">'程序员'</span>];   <span class="comment">//同时可在map中掺杂list数组 即work的value可以是一个数组</span></span><br><span class="line"><span class="built_in">print</span>(p);   <span class="comment">//输出: &#123;name:李四,age:20,work:[送外卖,程序员]&#125;</span></span><br><span class="line"><span class="built_in">print</span>(p[<span class="string">'work'</span>]);   <span class="comment">//单独打印map p中的work的value 输出数组: [送外卖,程序员]</span></span><br><span class="line"><span class="built_in">print</span>(p[<span class="string">'work'</span>][<span class="number">0</span>]);   <span class="comment">//也可以只打印key work的数组value中的0 输出: 送外卖</span></span><br></pre></td></tr></table></figure><h4 id="is判断语句"><a href="#is判断语句" class="headerlink" title="is判断语句"></a>is判断语句</h4><ul><li><p>通过 ‘ is ‘ 关键词判断类型: 当你不知道服务器返回的数据是什么类型可以通过is关键词判断数据类型 例如:</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">'123'</span>;   <span class="comment">//定义str为 字符串类型内容是123</span></span><br><span class="line"><span class="keyword">if</span>(str <span class="keyword">is</span> <span class="built_in">String</span>)&#123;   <span class="comment">//如果str is String</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'str是String类型'</span>);   <span class="comment">//就打印输出</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(str <span class="keyword">is</span> <span class="built_in">int</span>)&#123;   <span class="comment">//否则 如果 str is int</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'str是int类型'</span>);   <span class="comment">//就打印输出</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;   <span class="comment">//否则</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'其他类型'</span>);   <span class="comment">//打印输出</span></span><br><span class="line">&#125;   <span class="comment">//因为是字符串类型所以 输出: str是String类型关系运算符</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h3><ul><li><p>关系运算符有:</p><p>==(等于)       !=(不等于)       &gt;(大于)       &lt;(小于)       &gt;=(大于等于)       &lt;=(小于等于)     </p></li></ul><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><ul><li><p>逻辑运算符有:</p><p>!(取反)       &amp;&amp;(并且)       ||(或者)</p></li><li><p>或者||: 全部为false的话值为false,否则值为true</p></li><li><p>并且&amp;&amp;: 全部为true的话值为true,否则值为false</p></li></ul><h3 id="赋值运算"><a href="#赋值运算" class="headerlink" title="赋值运算"></a>赋值运算</h3><ul><li><p>赋值运算有:</p><p>=       ??=       ??</p></li><li><p>??= :表示如果b为空的话吧23赋值给b</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">例<span class="number">1</span>:                                           例<span class="number">2</span>:</span><br><span class="line"><span class="built_in">int</span> b;   <span class="comment">//定义一个int类型的b 没有赋值            int b=3;   //定义一个int类型b 赋值3   </span></span><br><span class="line">b??=<span class="number">23</span>;   <span class="comment">//b??=23                              b??=23;    //b??=23</span></span><br><span class="line"><span class="built_in">print</span>(b);   <span class="comment">//因为b没有赋值所以输出: 23           print(b);    //因为b有赋值3 所以输出: 3</span></span><br></pre></td></tr></table></figure></li><li><p>??: 表示如果 a??10  a为空,则吧10赋予a,如果a自有数值则不赋予.例1:</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a;   <span class="comment">//定义一个a 内容为空</span></span><br><span class="line"><span class="keyword">var</span> b=a??<span class="number">10</span>;   <span class="comment">//b=a??10 从右往左看先看a??10,因为a为空所以吧10赋予a  然后在看b=a  所以b=10</span></span><br><span class="line"><span class="built_in">print</span>(b);   <span class="comment">//输出: 10</span></span><br></pre></td></tr></table></figure><p>例2:</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a=<span class="number">22</span>;   <span class="comment">//赋值a=22</span></span><br><span class="line"><span class="keyword">var</span> b=a??<span class="number">10</span>;   <span class="comment">//因为a有内容所以并不会吧10赋予a所以a=22 所以b=a的时候b=22</span></span><br><span class="line"><span class="built_in">print</span>(b);   <span class="comment">//输出: 22</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="复合赋值运算"><a href="#复合赋值运算" class="headerlink" title="复合赋值运算"></a>复合赋值运算</h3><ul><li><p>+=       -=       *=       /=       %=(取余)       ~/=(取整)</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a+=<span class="number">10</span> 表示a=a+<span class="number">10</span>;</span><br><span class="line">a*=<span class="number">10</span> 表示a=a*<span class="number">10</span>;</span><br><span class="line">a~/=<span class="number">10</span> 表示a=a~/<span class="number">10</span>;</span><br></pre></td></tr></table></figure></li></ul><h3 id="条件表达式"><a href="#条件表达式" class="headerlink" title="条件表达式"></a>条件表达式</h3><ul><li><p>条件表达式有很多种</p><p>如:’if….else’     ‘switch…..case’</p></li><li><p>switch….case的使用方法如:</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> sex=<span class="string">'女'</span>;                                  <span class="comment">//switch(开关)   case(具体,事例)</span></span><br><span class="line"><span class="keyword">switch</span>(sex)&#123;   <span class="comment">//switch sex</span></span><br><span class="line">        <span class="keyword">case</span><span class="string">'男'</span>:    <span class="comment">//case 男</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">'他是男的'</span>);   <span class="comment">//打印输出</span></span><br><span class="line">        <span class="keyword">break</span>;   <span class="comment">//结束</span></span><br><span class="line">        <span class="keyword">case</span><span class="string">'女'</span>:   <span class="comment">//case 女</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">'她是女的'</span>);   <span class="comment">//打印输出</span></span><br><span class="line">        <span class="keyword">break</span>;   <span class="comment">//结束</span></span><br><span class="line">    <span class="keyword">default</span>:   <span class="comment">//如果两个case都不对</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">'传入数据错误'</span>);   <span class="comment">//打印输出</span></span><br><span class="line">        <span class="keyword">break</span>;   <span class="comment">//结束</span></span><br><span class="line">&#125;   <span class="comment">//因为case是女所以输出: 她是女的</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="三目运算"><a href="#三目运算" class="headerlink" title="三目运算"></a>三目运算</h3><ul><li><p>例1: 如果flag=true,吧’我是true’赋予c</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bool</span> flag=<span class="keyword">true</span>;   <span class="comment">//bool类型flag定义为true</span></span><br><span class="line"><span class="keyword">var</span> c;   <span class="comment">//定义一个C 内容为空</span></span><br><span class="line"><span class="keyword">if</span>(flag)&#123;   </span><br><span class="line">    c=<span class="string">'我是true'</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    c=<span class="string">'我是false'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print</span>(c);    <span class="comment">//输出: 我是true</span></span><br></pre></td></tr></table></figure><p>吧正常if else 转换为三目预算来减化为:</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bool</span> flag=<span class="keyword">true</span>;</span><br><span class="line"><span class="built_in">String</span> c=flag?<span class="string">'我是true'</span>:<span class="string">'我是false'</span>;   <span class="comment">//?为if,:为else</span></span><br><span class="line"><span class="built_in">print</span>(c);   <span class="comment">//输出: 我是true</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;数组  字典  算术运算符  关系运算符  逻辑运算符  条件表达式&lt;/strong&gt;  &lt;strong&gt;三目运算&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="http://yoursite.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="http://yoursite.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Dart学习笔记 (一)</title>
    <link href="http://yoursite.com/2020/03/24/Dart%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%B8%80/"/>
    <id>http://yoursite.com/2020/03/24/Dart%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%B8%80/</id>
    <published>2020-03-24T08:55:58.000Z</published>
    <updated>2020-03-24T13:51:06.209Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>古今中外有学问的人，有成就的人，总是十分注意积累的。知识就是机积累起来的，经验也是积累起来的。我们对什么事情都不应该像“过眼云烟”</p><p>​                                                                                                                                                                                <strong>邓拓</strong></p></blockquote><p><strong>入口  变量  常量</strong>  <strong>常用数据类型</strong>  <strong>字符串的拼接</strong>   <strong>布尔类型</strong></p><a id="more"></a><h1 id="Dart语言"><a href="#Dart语言" class="headerlink" title="Dart语言"></a>Dart语言</h1><ul><li>入口方法main</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> main()&#123;   <span class="comment">//没有返回值的入口方法       </span></span><br><span class="line">        </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>  <figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">main()&#123;   <span class="comment">//入口方法</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li><p>打印方法</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">'你好Hexo'</span>);   <span class="comment">//输出:你好Hexo</span></span><br></pre></td></tr></table></figure><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3></li><li><p>变量必须由<u><strong>数字</strong></u>,<strong><u>字母</u></strong>,<strong><u>下划线</u></strong>和<strong><u>美元符</u></strong>号组成  </p></li><li><p>标识符不能由<strong><u>数字</u></strong>开头  如错误示例:</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="number">123</span>str=<span class="number">123</span>;   <span class="comment">//错误示例</span></span><br></pre></td></tr></table></figure></li><li><p>标识符不能是<strong><u>保留字</u></strong> ,<u><strong>关键字</strong></u>  如错误示例:</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="built_in">int</span>=<span class="number">123</span>;   <span class="comment">//错误示例</span></span><br></pre></td></tr></table></figure></li><li><p>变量的名字是区分大小写的  如:<strong><u>age</u></strong>和<strong><u>Age</u></strong>应为两个不同的变量。在实际的运用中,也建议不要使用同一个。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> age=<span class="number">10</span>;   <span class="comment">//这是两个不同的变量</span></span><br><span class="line"><span class="keyword">var</span> Age=<span class="number">20</span>;</span><br></pre></td></tr></table></figure></li><li><p>标识符一定要见名思意,变量名称建议用名词,方法名称用动词。</p></li><li><p><strong><u>Var</u></strong>会自动判断变量类型,不能和<strong><u>String</u></strong>   <strong><u>int</u></strong>一起使用。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//数字类型不用带'引号',字符串类型须带上'引号',"双引号"和'单引号'效果一样,Dart有类型效验。</span></span><br><span class="line"><span class="keyword">var</span> str=<span class="string">'你好'</span>;   </span><br><span class="line"><span class="built_in">print</span>(str);   <span class="comment">//自动变量 打印出:你好</span></span><br><span class="line"><span class="keyword">var</span> <span class="built_in">num</span>=<span class="number">123</span>;</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">num</span>);   <span class="comment">//自动变量 打印出:123</span></span><br><span class="line">----------------------------------------</span><br><span class="line"><span class="built_in">String</span> str=<span class="string">'你好'</span>;</span><br><span class="line"><span class="built_in">print</span>(str);   <span class="comment">//字符串类型 打印出:你好</span></span><br><span class="line"><span class="built_in">int</span> <span class="built_in">num</span>=<span class="number">123</span>;</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">num</span>);   <span class="comment">//数字类型 打印出:123</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h3><ul><li><p>常量是不改变的量</p></li><li><p>变量可以修改,常量不可以修改</p></li><li><p><strong><u>const</u></strong>和<strong><u>final</u></strong>都是常量,但final更强大,const值不变一开始就要赋值;final可以开始不赋值,只能赋值一次,而且final不仅有const的<strong><u>编译时常量</u></strong>的特性,最重要的是它是<strong><u>运行时常量</u></strong>,<strong>惰性初始化</strong>,即在运行时第一次使用前才初始化 例如:</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> a=<span class="number">3.1415926</span>;   <span class="comment">//编译时常量</span></span><br><span class="line"><span class="built_in">print</span>(a);   <span class="comment">//打印出:3.1415926</span></span><br></pre></td></tr></table></figure><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> a=<span class="keyword">new</span> <span class="built_in">DateTime</span>.now();   <span class="comment">//运行时常量</span></span><br><span class="line"><span class="built_in">print</span>(a);   <span class="comment">//打印出:2019.9.17. 14:37:54:722292</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="常用数据类型"><a href="#常用数据类型" class="headerlink" title="常用数据类型"></a>常用数据类型</h3><ul><li><p><strong>Number</strong>(数值):</p><p>int:整数 整型        double:小数  浮点型</p></li><li><p><strong>String</strong>(字符串):</p><p>String:字符串</p></li><li><p><strong>Booleans</strong>(布尔):</p><p>bool:<strong>true</strong>对        <strong>false</strong>错</p></li><li><p><strong>List</strong>(数组):</p><p>list:数组,在Dart中,数组是列表对象,所以大多数人称为列表</p></li><li><p><strong>Map</strong>(字典):</p><p>map:字典</p></li><li><p>运算符中一旦有用double的数据,结果也会变成浮点型  如:</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> a=<span class="number">1</span>;</span><br><span class="line"><span class="built_in">double</span> b=<span class="number">2</span>;</span><br><span class="line"><span class="built_in">print</span>(a+b);   <span class="comment">//输出:3.0</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="字符串的拼接"><a href="#字符串的拼接" class="headerlink" title="字符串的拼接"></a>字符串的拼接</h3><ul><li><p>三对’引号’可写多层代码  如:</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">String</span> str=<span class="string">'''123</span></span><br><span class="line"><span class="string">456</span></span><br><span class="line"><span class="string">    789'''</span>;</span><br><span class="line"><span class="built_in">print</span>(str);   <span class="comment">//输出:123</span></span><br><span class="line">                <span class="number">456</span></span><br><span class="line">                      <span class="number">789</span></span><br></pre></td></tr></table></figure></li><li><p>字符串的拼接  如:</p></li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">例<span class="number">1</span>:</span><br><span class="line"><span class="built_in">String</span> str1=<span class="string">'你好'</span>;</span><br><span class="line"><span class="built_in">String</span> str2=<span class="string">'Dart'</span>;</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'<span class="subst">$str1</span><span class="subst">$str2</span>'</span>);   <span class="comment">//输出:你好Dart</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">'<span class="subst">$str1</span>  <span class="subst">$str2</span>'</span>);   <span class="comment">//输出:你好  Dart</span></span><br><span class="line"><span class="built_in">print</span>(str1+str2);   <span class="comment">//输出:你好Dart</span></span><br><span class="line"><span class="built_in">print</span>(str1 + str2);   <span class="comment">//输出:你好Dart</span></span><br><span class="line"><span class="built_in">print</span>(str1+<span class="string">' '</span>+str2);   <span class="comment">//输出:你好 Dart</span></span><br></pre></td></tr></table></figure><h3 id="布尔类型"><a href="#布尔类型" class="headerlink" title="布尔类型"></a>布尔类型</h3><ul><li><p>布尔类型是条件判断语句</p><p>使用if…else和true  false做判断:</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">例<span class="number">1</span>:</span><br><span class="line"><span class="keyword">var</span> dan=<span class="keyword">false</span>;   <span class="comment">//定义dan为false</span></span><br><span class="line"><span class="keyword">if</span>(dan)&#123;   <span class="comment">//如果dan为true</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'真'</span>);  </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;   <span class="comment">//否则</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'假'</span>);</span><br><span class="line">&#125;   <span class="comment">//输出:假</span></span><br><span class="line">例<span class="number">2</span>:</span><br><span class="line"><span class="built_in">int</span> a=<span class="number">12</span>;</span><br><span class="line"><span class="built_in">double</span> b=<span class="number">13</span>;</span><br><span class="line"><span class="keyword">if</span>(a==b)&#123;   <span class="comment">//假如a=b</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'a=b'</span>);   </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'a!=b'</span>);</span><br><span class="line">&#125;   <span class="comment">//输出:a!=b (a不等于b)</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;古今中外有学问的人，有成就的人，总是十分注意积累的。知识就是机积累起来的，经验也是积累起来的。我们对什么事情都不应该像“过眼云烟”&lt;/p&gt;
&lt;p&gt;​                                                                                                                                                                                &lt;strong&gt;邓拓&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;入口  变量  常量&lt;/strong&gt;  &lt;strong&gt;常用数据类型&lt;/strong&gt;  &lt;strong&gt;字符串的拼接&lt;/strong&gt;   &lt;strong&gt;布尔类型&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="http://yoursite.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="http://yoursite.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>NewDay 新的开始</title>
    <link href="http://yoursite.com/2020/03/23/newpapername/"/>
    <id>http://yoursite.com/2020/03/23/newpapername/</id>
    <published>2020-03-23T11:28:18.000Z</published>
    <updated>2020-03-23T16:49:28.895Z</updated>
    
    <content type="html"><![CDATA[<p>欢迎来到我的博客 我正在努力客制化中~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;欢迎来到我的博客 我正在努力客制化中~&lt;/p&gt;

      
    
    </summary>
    
    
    
  </entry>
  
</feed>
